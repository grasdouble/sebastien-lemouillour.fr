# This workflow will be able to manage:
# - creation of a release branch
# - merge of the release branch in develop and main, only develop or only main

name: Gitflow - Create Release

on:
  workflow_dispatch:
    inputs:
      scope:
        description: 'Release scope'
        type: choice
        default: nothing
        required: true
        options:
          - nothing
          - major
          - premajor
          - minor
          - preminor
          - patch
          - prepatch
          - prerelease

jobs:
  ci-gitflow-display-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Display inputs
        run: |
          echo "Github event ref branch  : ${{ github.event.ref }}"
          echo "Github actor             : ${{ GITHUB_ACTOR }}"
          echo "Github branch            : ${GITHUB_REF#refs/heads/}"
          echo "Release scope            : ${{ github.event.inputs.scope }}"
  ci-gitflow-create:
    environment: Need Review
    runs-on: ubuntu-latest
    steps:
      - name: Error - Missing scope
        if: github.event.inputs.scope == 'nothing'
        run: |
          echo "Release scope not defined"
          exit 1

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # fetch-depth: to be able to detect diff between release branch and main branch
          fetch-depth: 0
          ref: ${{ github.event.ref }}

      - name: setup git config
        run: |
          # git config user.name "Release Bot"
          # git config user.email "<>"
          git config user.name $GITHUB_ACTOR
          git config user.email gh-actions-${GITHUB_ACTOR}@github.com

      - name: Create release branch and tag
        id: release
        run: |
          echo "Create release from ${{ github.event.ref }} to a new release branch and create tag"
          npm version ${{ github.event.inputs.scope }} --no-git-tag-version > release.version
          echo "::set-output name=releaseVersion::$(cat release.version)"
          echo "::set-output name=releasebranch::release_$(cat release.version)"
          git branch release_$(cat release.version)
          git checkout release_$(cat release.version)
          git add package.json
          git commit -m "Release $(cat release.version)"
          git push origin release_$(cat release.version)
          git tag -a $(cat release.version) -m "Release $(cat release.version)"
          git push origin --tags
          echo "Release from ${{ github.event.ref }} to ${{ github.event.inputs.release_branch }} created"
          echo "Release tag $(cat release.version) created"

      - name: Generate release tag
        if: steps.release.outputs.releaseVersion
        uses: Roang-zero1/github-create-release-action@master
        with:
          created_tag: ${{ steps.release.outputs.releaseVersion }}
          version_regex: ^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+
          prerelease_regex: "^v[[:digit:]]+\\.[[:digit:]]+\\.[[:digit:]]+-[[:digit:]]"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create pull request to main
        if: steps.release.outputs.releaseVersion
        uses: devops-infra/action-pull-request@v0.4.2
        with:
          github_token: ${{ secrets.GIT_TOKEN }}
          source_branch: ${{ steps.release.outputs.releasebranch }}
          target_branch: main
          title: Release ${{ steps.release.outputs.releaseVersion }}
          body: |
            ## Release ${{ steps.release.outputs.releaseVersion }}
            **Automated pull request**
            ## Summary
            <!-- Diff summary - START -->
            <!-- Diff summary - END -->
            ## Commits
            <!-- Diff commits - START -->
            <!-- Diff commits - END -->
            ## Modified files
            <!-- Diff files - START -->
            <!-- Diff files - END -->
          draft: false
          get_diff: true

      - name: Create pull request to develop
        if: steps.release.outputs.releaseVersion
        uses: devops-infra/action-pull-request@v0.4.2
        with:
          github_token: ${{ secrets.GIT_TOKEN }}
          source_branch: ${{ steps.release.outputs.releasebranch }}
          target_branch: develop
          title: Release ${{ steps.release.outputs.releaseVersion }}
          body: |
            ## Release ${{ steps.release.outputs.releaseVersion }}
            **Automated pull request**
            ## Summary
            <!-- Diff summary - START -->
            <!-- Diff summary - END -->
            ## Commits
            <!-- Diff commits - START -->
            <!-- Diff commits - END -->
            ## Modified files
            <!-- Diff files - START -->
            <!-- Diff files - END -->
          draft: false
          get_diff: true
