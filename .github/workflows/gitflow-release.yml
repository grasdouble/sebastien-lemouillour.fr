# This workflow will be able to manage:
# - creation of a release branch
# - merge of the release branch in develop and main, only develop or only main

name: Gitflow - Release

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Gitflow process to trigger'
        type: choice
        default: nothing
        required: true
        options:
          - nothing
          - create release
          - merge release on main
          - merge release on develop
          - merge release on main and develop
      scope:
        description: 'Release scope'
        type: choice
        default: nothing
        required: true
        options:
          - nothing
          - major
          - premajor
          - minor
          - preminor
          - patch
          - prepatch
          - prerelease

jobs:
  ci-gitflow-display-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Display inputs
        run: |
          echo "Github event ref branch  : ${{ github.event.ref }}"
          echo "Github branch            : ${GITHUB_REF#refs/heads/}"
          echo "Action                   : ${{ github.event.inputs.action }}"
          echo "Release scope            : ${{ github.event.inputs.scope }}"
  ci-gitflow-nothing:
    environment: Need Review
    if: github.event.inputs.action == 'nothing'
    runs-on: ubuntu-latest
    steps:
      - name: Do Nothing
        run: |
          echo "Do nothing"
          exit 1
  ci-gitflow-create:
    environment: Need Review
    if: |
      github.event.inputs.action == 'create release'
    runs-on: ubuntu-latest
    steps:
      - name: Error - Missing scope
        if: github.event.inputs.scope == 'nothing'
        run: |
          echo "Release scope not defined"
          exit 1
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # fetch-depth: to be able to detect diff between release branch and main branch
          fetch-depth: 0
          ref: ${{ github.event.ref }}

      - name: setup git config
        run: |
          # git config user.name "Release Bot"
          # git config user.email "<>"
          git config user.name $GITHUB_ACTOR
          git config user.email gh-actions-${GITHUB_ACTOR}@github.com
      - name: Create release branch and tag
        id: release
        run: |
          echo "Create release from ${{ github.event.ref }} to a new release branch and create tag"
          npm version ${{ github.event.inputs.scope }} --no-git-tag-version > release.version
          echo "::set-output name=releaseVersion::$(cat release.version)"
          echo "::set-output name=releasebranch::release_$(cat release.version)"
          git branch release_$(cat release.version)
          git checkout release_$(cat release.version)
          git add package.json
          git commit -m "Release $(cat release.version)"
          git push origin release_$(cat release.version)
          git tag -a $(cat release.version) -m "Release $(cat release.version)"
          git push origin --tags
          echo "Release from ${{ github.event.ref }} to ${{ github.event.inputs.release_branch }} created"
          echo "Release tag $(cat release.version) created"
      - name: Generate release tag
        if: steps.release.outputs.releaseVersion
        uses: Roang-zero1/github-create-release-action@2.3.2
        with:
          created_tag: ${{ steps.release.outputs.releaseVersion }}
          version_regex: ^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+
          prerelease_regex: "^v[[:digit:]]+\\.[[:digit:]]+\\.[[:digit:]]+-[[:digit:]]"
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

  ci-gitflow-merge-main:
    environment: Need Review
    if: (github.event.inputs.action == 'merge release on main' || github.event.inputs.action == 'merge release on main and develop') && startsWith(github.event.ref, 'refs/heads/release')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # fetch-depth: to be able to detect diff between release branch and main branch
          fetch-depth: 0
          ref: main
      - name: setup git config
        run: |
          git config user.name $GITHUB_ACTOR
          git config user.email gh-actions-${GITHUB_ACTOR}@github.com
      - name: Merge release branch into main
        id: merge-main
        run: |
          echo "Merge ${GITHUB_REF#refs/heads/} to main"
          git checkout main
          git merge --ff ${GITHUB_REF#refs/heads/}
          git push origin
  ci-gitflow-merge-develop:
    environment: Need Review
    if: (github.event.inputs.action == 'merge release on develop' || github.event.inputs.action == 'merge release on main and develop') && startsWith(github.event.ref, 'refs/heads/release')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # fetch-depth: to be able to detect diff between release branch and main branch
          fetch-depth: 0
          ref: develop
      - name: setup git config
        run: |
          git config user.name $GITHUB_ACTOR
          git config user.email gh-actions-${GITHUB_ACTOR}@github.com
      - name: Merge release branch into develop
        id: merge-develop
        run: |
          echo "Merge ${GITHUB_REF#refs/heads/} to develop"
          git checkout develop
          git merge --ff ${GITHUB_REF#refs/heads/}
          git push origin
